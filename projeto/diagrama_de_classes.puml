@startuml
abstract class Usuario {
    -Long id
    -String nome
    -String cpf
    -String rg
    -String email
    -String senha
}

class Cliente extends Usuario {
    -Date dataNascimento
    -Endereco endereco
    -String ocupacao
    -List<Renda> renda
}

class Renda {
    -String empregador
    -double valor
    -LocalDate dataRecebimento
}

class Endereco {
    -Long id
    -String rua
    -String numero
    -String complemento
    -String bairro
    -String cidade
    -String estado
    -String cep
}

class Automovel {
    -Long id
    -String matriculaAutomovel
    -String marcaAutomovel
    -String modelo
    -int ano
    -String placa
    -StatusAutomovel status    
}

class PedidoDeAluguel {
    -Long id
    -Carro carro
    -Cliente cliente
    -LocalDate dataPedidoDeAluguel
    -LocalDate dataDevolucao
    -double taxaDiaria
    -double valorTotal
    -StatusPedidoDeAluguel status = Status.Pendente
    -bool desejaAdiquirirAutomovel
    -bool executarContratoDeLocacao = false
    -StatusContratoDeCredito statusContratoDeCredito

    -solicitarSeguroDeCredito()
    -executarContratoDeLocacao()
}

Enum StatusAutomovel {
    DISPONIVEL
    INDISPONIVEL
    ALUGADO
}


Enum StatusFinanceiro {
    PENDENTE
    APROVADO
    NEGADO
}

Enum StatusPedidoDeAluguel {
    APROVADO
    NEGADO
    ATIVO
    CONCLUIDO
    CANCELADO
    PENDENTE
    ATRASADO
}

Enum StatusContratoDeCredito{
    NAO_DESEJA
    PENDENTE
    APROVADO
    NEGADO
}

Enum TipoContrato{
    12_MESES
    24_MESES
    36_MESES
    48_MESES
}

Enum SituacaoFatura{
    PAGA
    PENDENTE
    ATRASADA
    CANCELADA
}

class Agencia {
    -Long id
    -String nome
}

class Fatura {
    -Long id
    -Date inicioPeriodoDeReferencia
    -Date finalPeriodoDeReferenci
    -Cliente cliente
    -ContratoDeLocacao contratoDeLocacao
    -Double valorTotal
    -SituacaoFatura situacaoFatura
}

class Financeiro {
    -verificarAlugueisPendentes()
    -verificarAlugueisAprovados()
    -verificarAlugueisNegados()
    -aprovarPedidoDeAluguel()
    -negarPedidoDeAluguel()
    -verificarFaturasAtrasadas()
}

class ContratoDeLocacao{
    -Cliente cliente
    -Agencia agenteLocador
    -Date dataInicio
    -Date dataTermino
    -Automovel AutomovelLocado
    -TipoContrato tipoContrato
    -StatusFinanceiro statusFinanceiro
    -ContratoSeguroDeCredito contratoSeguroDeCredito

    -verificarSeguroDeCredito()
    -gerarFatura()
}

class Agente extends Usuario{

}

class Banco{
    -ContratoSeguroDeCredito contratoDeSeguroDeCredito 
    -gerarNegativaDeCredito(PedidoDeAluguel)
    -gerarContratoDeSeguroDeCredito(PedidoDeAluguel)
}

class AgenteBancario extends Usuario{
}

class ContratoSeguroDeCredito {
    -Long id
    -Banco segurador
    -Double creditoLiberado
    -Double taxaDeJuros
    -PedidoDeAluguel PedidoDeAluguel
}

ContratoSeguroDeCredito "*" --* "1" Banco : Consede <

ContratoDeLocacao "1" --* "1" PedidoDeAluguel : refere-se >
ContratoDeLocacao "1" o-- "1" ContratoSeguroDeCredito : consedido a <

PedidoDeAluguel "*" --* "1" Cliente : Solicita  <
PedidoDeAluguel "*" --* "1" Agencia : Recebe >
PedidoDeAluguel "1" --* "1" Automovel : Reserva >
PedidoDeAluguel "1" -- "*" Agente : Avalia <


ContratoDeLocacao "1" *-- "*" Fatura : gera >

Financeiro "1" o-- "*" Agente : Atua <

Cliente "1" *-- "1" Endereco : reside em >
Cliente "1" *-- "3" Renda : recebe >

Banco "1" o-- "*" AgenteBancario : Avalia pedidos de cr√©dito <

@enduml
